name: gamma-ci-made-easy
description: Merge your PR directly to the testing branch!
author: Umair Jibran

inputs:
  target-branch:
    description: 'Branch in which you want to merge the PR, defaults to alpha'
    required: false
    default: 'alpha'
  token:
    description: GitHub Personal Access Token
    required: true
branding:
  icon: 'activity'
  color: 'white'

runs:
  using: 'composite'
  steps:
    - id: is-pr
      run: |
        echo "THIS ACTION SUPPORTS PULL REQUESTS ONLY, for now..."
      shell: bash
      if: ${{ github.event_name != 'pull_request' }}

    - id: config-setup
      run: |
        echo "SETTING UP GIT CONFIG"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git config --global user.name "${{ github.actor }}"
      shell: bash
      env:
        GITHUB_PAT: ${{ inputs.token }}

    - id: merge-branch
      run: |
        echo "DECLARING DEFAULT BRANCH"
        BRANCH=${{ github.event.repository.default_branch }}
        echo "$BRANCH $ACCESS_TOKEN"
        if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
          echo "INITIALIZING GIT REPO"
          git init
          echo "SETTING DEFAULT BRANCH"
          git branch -m $BRANCH
          echo "SETTING UP GIT REMOTE"
          git remote add origin https://${{ github.repository_owner }}:${{ env.GITHUB_PAT }}@github.com/${{ github.repository }}.git
        else
          echo "SETTING ORIGIN FOR PRE EXISTING REPO"
          git remote set-url origin https://${{ github.repository_owner }}:${{ env.GITHUB_PAT }}@github.com/${{ github.repository }}.git
        fi
        git fetch
        if ! git ls-remote --exit-code --heads origin ${{ env.TARGET_BRANCH }} >/dev/null 2>&1; then
          echo "CHECKING OUT \`$BRANCH\`"
          git checkout $BRANCH
          echo "FETCHING LATEST CODE AT \`$BRANCH\`"
          git pull origin $BRANCH
          echo "CREATING \`${{ env.TARGET_BRANCH }}\`"
          git branch ${{ env.TARGET_BRANCH }}
          echo "PUSHING \`${{ env.TARGET_BRANCH }}\`"
          git push --set-upstream origin ${{ env.TARGET_BRANCH }}
          echo "CHECKING OUT \`${{ env.TARGET_BRANCH }}\`"
          git checkout ${{ env.TARGET_BRANCH }}
        else
          echo "CHECKING OUT \`${{ env.TARGET_BRANCH }}\`"
          git checkout -b ${{ env.TARGET_BRANCH }} origin/${{ env.TARGET_BRANCH }}
        fi
        echo "PULLING CHANGES IF ANY"
        git pull origin ${{ env.TARGET_BRANCH }}
        echo "MERGING PR IN \`${{ env.TARGET_BRANCH }}\`"
        git merge --no-ff origin/${{ github.event.pull_request.head.ref }} -m "Merge pull request into ${{ env.TARGET_BRANCH }}"
        echo "PUSHING CHANGES TO ${{ env.TARGET_BRANCH }}"
        git push origin ${{ env.TARGET_BRANCH }}
      shell: bash
      if: ${{ github.event_name == 'pull_request' && ( github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize' ) }}
      env:
        TARGET_BRANCH: ${{ inputs.target-branch }}
        GITHUB_PAT: ${{ inputs.token }}

    - id: leave-comment
      run: |
        echo "EXTRACTING PR NUMBER"
        PR_NUMBER=$(echo "${{ github.event.pull_request.url }}" | awk -F'/' '{print $NF}')
        echo "CREATING COMMENT BODY AND API URL"
        COMMENT="PR #$PR_NUMBER merged successfully in [${{ env.TARGET_BRANCH }}](https://github.com/${{ github.repository }}/tree/${{ env.TARGET_BRANCH }})"
        API_URL="https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"

        echo "POSTING COMMENT ON PR"
        curl -X POST -H "Authorization: Bearer ${{ env.GITHUB_PAT }}" -d "{\"body\":\"$COMMENT\"}" $API_URL
      shell: bash
      if: ${{ steps.merge-branch.outcome == 'success' }}
      env:
        TARGET_BRANCH: ${{ inputs.target-branch }}
        GITHUB_PAT: ${{ inputs.token }}
